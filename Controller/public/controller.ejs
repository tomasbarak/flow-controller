<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controller</title>
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js"
        integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k"
        crossorigin="anonymous"></script>
    <script src="https://thunkable.github.io/webviewer-extension/thunkableWebviewerExtension.js"
        type="text/javascript"></script>
    <style>
        body,
        html {
            margin: 0;
            padding: 0;
            height: 100vh;
            width: 100vw;
            font-family: 'Roboto', sans-serif;
            font-size: 16px;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #wrapper {
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            height: 100%;
            width: 100%;
            background-color: black;
        }

        #sendBtn {
            background-color: rgb(100, 100, 100);
            border: 1px solid #fff;
            border-radius: 5px;
            font-size: 18px;
            padding: 5px;
            margin: 15px;
            cursor: pointer;
        }

        #channelIn {
            text-align: center;
            height: 100px;
            width: 100%;
            font-size: 24px;
            color: #fff;
            background-color: rgba(155, 155, 155, 0.3);
            border-top-style: hidden;
            border-right-style: hidden;
            border-left-style: hidden;
            border-bottom-style: hidden;
            margin-bottom: 15px;
            border-bottom: 2px solid #56DEB6;
        }

        textarea:focus,
        input:focus {
            outline: none;
        }

        .keyboard-number{
            background-color: rgba(155, 155, 155, 0.3);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            width: 100%;
            border: 1px solid #fff;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
            user-select: none;
        }

        #keyboard{
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(4, 100px);
            justify-content: center;
            grid-gap: 10px;
            width: 100%;
            background-color: black;
            height: 100%;
        }

        .keyboard-space{
            background-color: rgba(100, 100, 100, 0);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            width: 100%;
            border: 1px solid transparent;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
            user-select: none;
        }

        .keyboard-custom-key{
            background-color: rgba(155, 155, 155, 0.3);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            width: 100%;
            border: 1px solid #fff;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
            user-select: none;
        }

        #search-btn{
            border: 1px solid #56DEB6;
        }

        #back-btn{
            border: 1px solid #f00;
        }
    </style>
</head>

<body>
    <div id="wrapper">
        <input type="numer" id="channelIn" placeholder="" readonly>
        <div id="keyboard">
            <div class="keyboard-number" id="key-1">1</div>
            <div class="keyboard-number" id="key-2">2</div>
            <div class="keyboard-number" id="key-3">3</div>
            <div class="keyboard-number" id="key-4">4</div>
            <div class="keyboard-number" id="key-5">5</div>
            <div class="keyboard-number" id="key-6">6</div>
            <div class="keyboard-number" id="key-7">7</div>
            <div class="keyboard-number" id="key-8">8</div>
            <div class="keyboard-number" id="key-9">9</div>
            <div class="keyboard-custom-key" id="back-btn" onclick="eraseLastCharacter()">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="#ff0000"><path fill-rule="evenodd" d="M15.28 5.22a.75.75 0 00-1.06 0l-6.25 6.25a.75.75 0 000 1.06l6.25 6.25a.75.75 0 101.06-1.06L9.56 12l5.72-5.72a.75.75 0 000-1.06z"></path></svg>
            </div>
            <div class="keyboard-number" id="key-0">0</div>
            <div class="keyboard-custom-key" id="search-btn" onclick="sendChannel(document.getElementById('channelIn').value)">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="#56DEB6"><path fill-rule="evenodd" d="M14.53 15.59a8.25 8.25 0 111.06-1.06l5.69 5.69a.75.75 0 11-1.06 1.06l-5.69-5.69zM2.5 9.25a6.75 6.75 0 1111.74 4.547.746.746 0 00-.443.442A6.75 6.75 0 012.5 9.25z"></path></svg>
            </div>
        </div>
    </div>

    <script>
        const socket = io(`ws://<%=locals.host%>:2009`);
        let sent = false;
        function sendChannel(channel) {
            socket.emit("changeChannel", channel);
            sent = true;
        }

        function eraseLastCharacter() {
            let channel = document.getElementById('channelIn').value;
            document.getElementById('channelIn').value = channel.substring(0, channel.length - 1);
        }

        window.onload = () => {
            ThunkableWebviewerExtension.postMessage('loaded');
        }

        document.querySelectorAll(".keyboard-number").forEach(key => {
            key.addEventListener("click", () => {
                if(!sent){
                    if(document.querySelector("#channelIn").value.length >= 3){
                    }else{
                        document.querySelector("#channelIn").value += key.innerText;
                    }
                }else{
                    document.querySelector("#channelIn").value = null;
                    document.querySelector("#channelIn").value += key.innerText;
                    sent = false;
                }
            });
        });
    </script>
</body>

</html>